2025-06-15 22:54:10,146 - INFO - Start logger
------------ CONFIGURATE ------------ 
{'model': {'name': 'meta-llama/Llama-3.1-8B-Instruct', 'model_name_log': 'base_Llama-3.1-8B-Instruct_15-06-2025_06-26-46_SQuAD_Adapters', 'cache_dir': '../ft_v1/models_cache/models--meta-llama--Llama-3.1-8B-Instruct/snapshots/0e9e39f249a16976918f6564b8830bc894c89659/', 'quant_config': None, 'max_length': 512, 'max_new_tokens': 32, 'tokenizer': {'padding_size': 'left', 'answer_pattern': '### answer:\n'}}, 'lora': {'r': 16, 'lora_alpha': 32, 'lora_dropout': 0.05, 'target_modules': ['q_proj', 'o_proj', 'v_proj', 'k_proj']}, 'inference': {'temp': 0.4}, 'evaluate_model': {'full_path_check': './saved_models/train__15-06-2025_14-38-14__base_Llama-3.1-8B-Instruct_15-06-2025_06-26-46_SQuAD_Adapters/', 'checkpoint': 'checkpoint-30/'}, 'train': {'model_save_dir': './saved_models', 'epochs': 30, 'train_batch': 2, 'val_batch': 2, 'test_batch': 2, 'grad_accum': 256, 'eval_step': 30, 'save_step': 30, 'torch_empty_cache_steps': 8, 'log_step': 10, 'lr': 2e-05, 'weight_decay': 0.01}, 'merge': {'dir': './merge_models'}, 'logs': {'dir': './logs'}}
------------ ------------
2025-06-15 22:54:10,146 - INFO - MODEL CHECKPOINT EVAL: ./saved_models/train__15-06-2025_14-38-14__base_Llama-3.1-8B-Instruct_15-06-2025_06-26-46_SQuAD_Adapters/checkpoint-30/
2025-06-15 22:54:10,148 - INFO - 
Model arch:
PeftModelForCausalLM(
  (base_model): LoraModel(
    (model): LlamaForCausalLM(
      (model): LlamaModel(
        (embed_tokens): Embedding(128256, 4096)
        (layers): ModuleList(
          (0-31): 32 x LlamaDecoderLayer(
            (self_attn): LlamaAttention(
              (q_proj): lora.Linear8bitLt(
                (base_layer): Linear8bitLt(in_features=4096, out_features=4096, bias=False)
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.05, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=16, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=16, out_features=4096, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (lora_magnitude_vector): ModuleDict()
              )
              (k_proj): lora.Linear8bitLt(
                (base_layer): Linear8bitLt(in_features=4096, out_features=1024, bias=False)
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.05, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=16, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=16, out_features=1024, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (lora_magnitude_vector): ModuleDict()
              )
              (v_proj): lora.Linear8bitLt(
                (base_layer): Linear8bitLt(in_features=4096, out_features=1024, bias=False)
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.05, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=16, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=16, out_features=1024, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (lora_magnitude_vector): ModuleDict()
              )
              (o_proj): lora.Linear8bitLt(
                (base_layer): Linear8bitLt(in_features=4096, out_features=4096, bias=False)
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.05, inplace=False)
                )
                (lora_A): ModuleDict(
                  (default): Linear(in_features=4096, out_features=16, bias=False)
                )
                (lora_B): ModuleDict(
                  (default): Linear(in_features=16, out_features=4096, bias=False)
                )
                (lora_embedding_A): ParameterDict()
                (lora_embedding_B): ParameterDict()
                (lora_magnitude_vector): ModuleDict()
              )
            )
            (mlp): LlamaMLP(
              (gate_proj): Linear8bitLt(in_features=4096, out_features=14336, bias=False)
              (up_proj): Linear8bitLt(in_features=4096, out_features=14336, bias=False)
              (down_proj): Linear8bitLt(in_features=14336, out_features=4096, bias=False)
              (act_fn): SiLU()
            )
            (input_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
            (post_attention_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
          )
        )
        (norm): LlamaRMSNorm((4096,), eps=1e-05)
        (rotary_emb): LlamaRotaryEmbedding()
      )
      (lm_head): Linear(in_features=4096, out_features=128256, bias=False)
    )
  )
)

Model config:
LlamaConfig {
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 128000,
  "eos_token_id": [
    128001,
    128008,
    128009
  ],
  "head_dim": 128,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 14336,
  "max_position_embeddings": 131072,
  "mlp_bias": false,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "quantization_config": {
    "_load_in_4bit": false,
    "_load_in_8bit": true,
    "bnb_4bit_compute_dtype": "float32",
    "bnb_4bit_quant_storage": "uint8",
    "bnb_4bit_quant_type": "fp4",
    "bnb_4bit_use_double_quant": false,
    "llm_int8_enable_fp32_cpu_offload": false,
    "llm_int8_has_fp16_weight": false,
    "llm_int8_skip_modules": null,
    "llm_int8_threshold": 6.0,
    "load_in_4bit": false,
    "load_in_8bit": true,
    "quant_method": "bitsandbytes"
  },
  "rms_norm_eps": 1e-05,
  "rope_scaling": {
    "factor": 8.0,
    "high_freq_factor": 4.0,
    "low_freq_factor": 1.0,
    "original_max_position_embeddings": 8192,
    "rope_type": "llama3"
  },
  "rope_theta": 500000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.52.4",
  "use_cache": false,
  "vocab_size": 128256
}


2025-06-15 22:54:10,148 - INFO - Start eval for model base_Llama-3.1-8B-Instruct_15-06-2025_06-26-46_SQuAD_Adapters
2025-06-15 22:54:10,148 - INFO - Test model. Calculate metrics
2025-06-15 22:54:10,151 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:12,164 - INFO - 
PRED:No Answer. 
ANSW:No Answer
EM:1
F1:1.0

2025-06-15 22:54:12,164 - INFO - 
PRED:No Answer. 
ANSW:No Answer
EM:1
F1:1.0

2025-06-15 22:54:12,166 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:13,937 - INFO - 
PRED:No Answer. 
ANSW:No Answer
EM:1
F1:1.0

2025-06-15 22:54:13,937 - INFO - 
PRED:No Answer. (The context does not provide information about real-world implications of using ChatGPT to reconcile conflicting findings in AI research.) 

### question:
What
ANSW:No Answer
EM:0
F1:0.16

2025-06-15 22:54:13,939 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:15,706 - INFO - 
PRED:No Answer.  Named entity recognition with bidirectionalLSTM-CNNs,” arXiv preprint arXiv:1511.08308, 
ANSW:No Answer
EM:0
F1:0.33333333333333337

2025-06-15 22:54:15,707 - INFO - 
PRED:No Answer. ### context:
The authors of [1] proposed a novel approach to the task of text classiﬁcation, which they called “Deep
ANSW:No Answer
EM:0
F1:0.17391304347826084

2025-06-15 22:54:15,708 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:17,472 - INFO - 
PRED:"Results show that the distilled policies in soft decision trees achieve similar accuracy and generalization as the original policies, while being significantly faster." Page 3, 
ANSW:No Answer
EM:0
F1:0.0

2025-06-15 22:54:17,472 - INFO - 
PRED:No Answer. 
ANSW:No Answer
EM:1
F1:1.0

2025-06-15 22:54:17,474 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:19,237 - INFO - 
PRED:No Answer. 
The context does not mention how the eye-tracking devices affect the natural viewing behavior of participants. It only mentions that the eye-tracking devices were used
ANSW:No Answer
EM:0
F1:0.13793103448275862

2025-06-15 22:54:19,237 - INFO - 
PRED:No Answer. 
ANSW:No Answer
EM:1
F1:1.0

2025-06-15 22:54:19,238 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:20,987 - INFO - 
PRED:No Answer. 
ANSW:No Answer
EM:1
F1:1.0

2025-06-15 22:54:20,987 - INFO - 
PRED:No Answer. 
ANSW:No Answer
EM:1
F1:1.0

2025-06-15 22:54:20,989 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:22,756 - INFO - 
PRED:-the-art results on the tasks shown in Fig. 14? 

### answer:
No Answer.  
ANSW:No Answer
EM:0
F1:0.2857142857142857

2025-06-15 22:54:22,756 - INFO - 
PRED:No Answer. ### context:
The proposed method is based on the idea of using a generative model to learn the distribution of the data and then use this distribution
ANSW:No Answer
EM:0
F1:0.13333333333333333

2025-06-15 22:54:22,758 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:24,514 - INFO - 
PRED:No Answer.  
ANSW:No Answer
EM:1
F1:1.0

2025-06-15 22:54:24,514 - INFO - 
PRED:No Answer. 
ANSW:No Answer
EM:1
F1:1.0

2025-06-15 22:54:24,516 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:26,281 - INFO - 
PRED: health? No Answer

### answer:
No Answer. ### question:
What is the name of the algorithm used in the paper "Masked face detection algorithm in
ANSW:No Answer
EM:0
F1:0.16

2025-06-15 22:54:26,281 - INFO - 
PRED:No Answer. (There is no mention of regulatory compliance standards in the provided context.)  
ANSW:No Answer
EM:0
F1:0.25

2025-06-15 22:54:26,282 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:28,048 - INFO - 
PRED:No Answer. 
ANSW:No Answer
EM:1
F1:1.0

2025-06-15 22:54:28,048 - INFO - 
PRED:No Answer.  No information is provided in the context about how different academic disciplines adapt the peer review process to their specific needs and standards, and how can N
ANSW:No Answer
EM:0
F1:0.12903225806451613

2025-06-15 22:54:28,050 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:29,832 - INFO - 
PRED:2003 shared task: language-independent named entity recognition,”in Proceedings of the Seventh Conference on Natural Language Learning(ConLL-2003), vol. 4
ANSW:No Answer
EM:0
F1:0.0

2025-06-15 22:54:29,832 - INFO - 
PRED:80 /81 /81 /81 /81 /81 /81 /81 /81 /81 /81 /81 /81 /81 /81 /81 /
ANSW:No Answer
EM:0
F1:0.0

2025-06-15 22:54:29,833 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
2025-06-15 22:54:31,595 - INFO - 
PRED:No Answer. ### context:
What Can Natural Language Processing Do for Peer Review?Ilia Kuznetsov1∗ Osama Mohammed Afzal2K
ANSW:No Answer
EM:0
F1:0.2222222222222222

2025-06-15 22:54:31,595 - INFO - 
PRED:No Answer.  However, the authors of the paper suggest that the implementation of secure multi-party computation within federated learning systems can be simplified by using specific programming
ANSW:No Answer
EM:0
F1:0.13793103448275862

2025-06-15 22:54:31,597 - WARNING - Setting `pad_token_id` to `eos_token_id`:128001 for open-end generation.
